// <auto-generated />
using System;
using Dawstin_CPW221_BaseballShop.Baseball_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dawstin_CPW221_BaseballShop.Migrations
{
    /// <summary>
    /// Represents a snapshot of the current state of the database model.
    /// </summary>
    [DbContext(typeof(BaseballShop))]
    partial class BaseballShopModelSnapshot : ModelSnapshot
    {
        /// <summary>
        /// Builds the database model with its entity configurations.
        /// </summary>
        /// <param name="modelBuilder">The model builder used to define database structures.</param>
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Category", b =>
            {
                /// <summary>
                /// Represents the Category table.
                /// </summary>
                b.Property<int>("CategoryID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                /// <summary>
                /// The name of the category.
                /// </summary>
                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("CategoryID");

                b.ToTable("Categories");

                b.HasData(
                    new { CategoryID = 1, Name = "Bats" },
                    new { CategoryID = 2, Name = "Gloves" }
                );
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Customer", b =>
            {
                /// <summary>
                /// Represents a customer in the baseball shop system.
                /// </summary>
                b.Property<int>("CustomerID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int"); // Unique identifier for the customer.

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                /// <summary>
                /// The date the customer account was created.
                /// </summary>
                b.Property<DateTime>("CreatedDate")
                    .HasColumnType("datetime2");

                /// <summary>
                /// The customer's email address.
                /// </summary>
                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The customer's first name.
                /// </summary>
                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The customer's last name.
                /// </summary>
                b.Property<string>("LastName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The customer's phone number.
                /// </summary>
                b.Property<string>("Phone")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("CustomerID");
                b.ToTable("Customers");
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Event", b =>
            {
                /// <summary>
                /// Represents an event in the baseball shop system.
                /// </summary>
                b.Property<int>("EventID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int"); // Unique identifier for the event.

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                /// <summary>
                /// The description of the event.
                /// </summary>
                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The date of the event.
                /// </summary>
                b.Property<DateTime>("EventDate")
                    .HasColumnType("datetime2");

                /// <summary>
                /// The name of the event.
                /// </summary>
                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("EventID");
                b.ToTable("Events");
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Item", b =>
            {
                /// <summary>
                /// Represents an item in the baseball shop.
                /// </summary>
                b.Property<int>("ItemID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int"); // Unique identifier for the item.

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                /// <summary>
                /// The category ID of the item (nullable).
                /// </summary>
                b.Property<int?>("CategoryID")
                    .HasColumnType("int");

                /// <summary>
                /// The date the item was added to the database.
                /// </summary>
                b.Property<DateTime>("CreatedDate")
                    .HasColumnType("datetime2");

                /// <summary>
                /// The description of the item.
                /// </summary>
                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The name of the item.
                /// </summary>
                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The price of the item.
                /// </summary>
                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,2)");

                b.HasKey("ItemID");
                b.HasIndex("CategoryID");
                b.ToTable("Items");
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Order", b =>
            {
                /// <summary>
                /// Represents an order placed by a customer.
                /// </summary>
                b.Property<int>("OrderID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int"); // Unique identifier for the order.

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                /// <summary>
                /// The ID of the customer who placed the order.
                /// </summary>
                b.Property<int>("CustomerID")
                    .HasColumnType("int");

                /// <summary>
                /// The name of the customer associated with the order.
                /// </summary>
                b.Property<string>("CustomerName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The date the order was placed.
                /// </summary>
                b.Property<DateTime>("OrderDate")
                    .HasColumnType("datetime2");

                /// <summary>
                /// The current status of the order (e.g., Pending, Shipped, Delivered).
                /// </summary>
                b.Property<string>("Status")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The total amount charged for the order.
                /// </summary>
                b.Property<decimal>("TotalAmount")
                    .HasColumnType("decimal(18,2)");

                /// <summary>
                /// The total price of all products in the order.
                /// </summary>
                b.Property<decimal>("TotalPrice")
                    .HasColumnType("decimal(18,2)");

                b.HasKey("OrderID");
                b.HasIndex("CustomerID");
                b.ToTable("Orders");
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.OrderDetail", b =>
            {
                /// <summary>
                /// Represents the details of a product in an order.
                /// </summary>
                b.Property<int>("OrderDetailID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int"); // Unique identifier for the order detail.

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"));

                /// <summary>
                /// The ID of the order this detail belongs to.
                /// </summary>
                b.Property<int>("OrderID")
                    .HasColumnType("int");

                /// <summary>
                /// The ID of the product included in the order.
                /// </summary>
                b.Property<int>("ProductID")
                    .HasColumnType("int");

                /// <summary>
                /// The quantity of the product in the order.
                /// </summary>
                b.Property<int>("Quantity")
                    .HasColumnType("int");

                b.HasKey("OrderDetailID");
                b.HasIndex("OrderID");
                b.HasIndex("ProductID");
                b.ToTable("OrderDetails");
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Product", b =>
            {
                /// <summary>
                /// Represents a product available in the baseball shop.
                /// </summary>
                b.Property<int>("ProductID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int"); // Unique identifier for the product.

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                /// <summary>
                /// The category ID associated with the product.
                /// </summary>
                b.Property<int>("CategoryID")
                    .HasColumnType("int");

                /// <summary>
                /// The date the product was added to the system.
                /// </summary>
                b.Property<DateTime>("CreatedDate")
                    .HasColumnType("datetime2");

                /// <summary>
                /// A brief description of the product.
                /// </summary>
                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The name of the product.
                /// </summary>
                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                /// <summary>
                /// The price of the product.
                /// </summary>
                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,2)");

                /// <summary>
                /// The available stock quantity of the product.
                /// </summary>
                b.Property<int>("Stock")
                    .HasColumnType("int");

                b.HasKey("ProductID");
                b.HasIndex("CategoryID");
                b.ToTable("Products");
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Item", b =>
            {
                /// <summary>
                /// Establishes the relationship between an item and its category.
                /// </summary>
                b.HasOne("Dawstin_CPW221_BaseballShop.Models.Category", "ItemCategory")
                    .WithMany("Items")
                    .HasForeignKey("CategoryID");

                b.Navigation("ItemCategory");
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Order", b =>
            {
                /// <summary>
                /// Establishes the relationship between an order and its customer.
                /// </summary>
                b.HasOne("Dawstin_CPW221_BaseballShop.Models.Customer", "Customer")
                    .WithMany()
                    .HasForeignKey("CustomerID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Customer");
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.OrderDetail", b =>
            {
                /// <summary>
                /// Establishes the relationship between an order detail and its order.
                /// </summary>
                b.HasOne("Dawstin_CPW221_BaseballShop.Models.Order", "Order")
                    .WithMany()
                    .HasForeignKey("OrderID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                /// <summary>
                /// Establishes the relationship between an order detail and its product.
                /// </summary>
                b.HasOne("Dawstin_CPW221_BaseballShop.Models.Product", "Product")
                    .WithMany()
                    .HasForeignKey("ProductID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Order");
                b.Navigation("Product");
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Product", b =>
            {
                /// <summary>
                /// Establishes the relationship between a product and its category.
                /// </summary>
                b.HasOne("Dawstin_CPW221_BaseballShop.Models.Category", null)
                    .WithMany("Products")
                    .HasForeignKey("CategoryID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

            modelBuilder.Entity("Dawstin_CPW221_BaseballShop.Models.Category", b =>
            {
                /// <summary>
                /// Navigational property for items within the category.
                /// </summary>
                b.Navigation("Items");

                /// <summary>
                /// Navigational property for products within the category.
                /// </summary>
                b.Navigation("Products");
            });
#pragma warning restore 612, 618
        }
    }
}
